import type {NextPage} from "next";
import Head from 'next/head';
import { isNumberObject } from 'util/types'
import Header from '../components/Header';
import Login from '../components/Login';
import Loading from '../components/Loading';
import CountdownTimer  from '../components/CountdownTimer';
import {useState} from "react";
import {ethers} from "ethers";
import currency from "constants";
import {
  useContract,
  useMetamask,
  useDisconnect,
  useAddress,
  useContractRead,
  
} from "@thirdweb-dev/react";
import styles from '../styles/Home.module.css'


const Home: NextPage = () => {
  const address = useAddress();
  const [quantity, setQuantity] = useState<number>();
  const { contract, isLoading } = useContract(process.env.NEXT_PUBLIC_LOTTERY_CONTRACT_ADDRESS);
  const { data: remainingTickets } = useContractRead(contract, "RemainingTickets");
  const { data: currentWinningReward } = useContractRead(contract, "CurrentWinningReward")
  if(isLoading) return <Loading />;
  if(!address) return <Login />;
  return (
    <div className="bg-[#091818] min-h-screen flex flex-col">
      <Head>
        <title>Web 3.0 Lottery</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      { /* the next draw box*/}
      <div className="space-y-5 md:space-y-0 m-5 md:flex md:flex-row item-start justify-center md:space-x-5">
        <div className="stats-container">
            <div>
              <h1 className="text-5xl text-white font-semibold text-center">The Next Draw</h1>
            </div>
       
            <div className="flex justify-between p-2 space-x-2">
                <div className="stats">
                  <h2 className="text-sm">Total Pool</h2>
                  <p className="text-xl">{currentWinningReward && ethers.utils.formatEther(currentWinningReward.toString())} {" "} {currency}</p>
                </div>
                <div className="stats">
                   <h2 className="text-sm">Tickets Remaining</h2>
                   <p className="text-xl"> {remainingTickets?.toNumber()}</p>
                </div>
            </div>
            {/*Countdown timer */}
            <div className="mt-5 mb-3">
              <CountdownTimer />

            </div>
        </div>
        <div className="stats-container space-y-2">
           <div className="stats-container">
             <div className="flex justify-between items-center text-white pb-2">
                <h2>Price Per Ticket</h2>
                 <p>0.01 Matic</p>
             </div>
             <div className="flex text-white item-center space-x-2 bg-[#091818] border-[#004337] border p-4">
                <p>TICKETS</p>
                <input className="flex w-full bg-transparent text-right outline-none" type="number" min={1} max={10} value={quantity} 
                onChange={e=> setQuantity(Number(e.target.value))}/>
             </div>

             <div className="space-y-2 mt-5">
                 <div className="flex items-center justify-between text-emrald-300 text-sm italic font-extrabold">
                    <p>Total Cost of tickets</p>
                    <p>0.999</p>
                  </div>
                  <div className="flex items-center justify-between text-emrald-300 text-xs italic">
                      <p>Service fees</p>
                      <p>0.001 MATIC</p>
                  </div>
                  <div className="flex items-center justify-between text-emrald-300 text-xs italic">
                     <p>+ Network Fees</p>
                     <p> TBC</p>
                  </div>
             </div>
             <button className="mt-5 w-full bg-gradient-to-br from-orange-500 to-emerald-600 px-10 py-5 rounded-md text-white shadow-xl disabled:from-gray-600 disabled:text-gray-100 disabled:to-gray-600 disabled:cursor-not-allowed">
                 Buy Tickets
             </button>
           </div>
         </div>
      </div>
    </div>
  );
};
export default Home;
